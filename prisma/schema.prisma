// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  quizzes       Quiz[]
  quizAttempts  QuizAttempt[]
  createdAt     DateTime  @default(now())
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Quiz {
  id           String        @id @default(cuid())
  title        String
  description  String?
  questions    String        // JSON string of QuizQuestion[]
  totalQuestions Int
  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  attempts     QuizAttempt[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model QuizAttempt {
  id           String   @id @default(cuid())
  score        Int
  totalQuestions Int
  answers      String   // JSON string of user answers
  completedAt  DateTime @default(now())
  userId       String
  quizId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  quiz         Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
}
